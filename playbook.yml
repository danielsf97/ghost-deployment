---

- hosts: localhost
  connection: local
  gather_facts: no
  roles:
    - role: gcp
      vars:
        gcp_zone: us-east1-b
        gcp_region: us-east1
        gcp_project: sbdgrupo9
        gcp_cred_kind: serviceaccount
        gcp_cred_file: credentials.json
        gcp_machine_type: n1-standard-1
        source_image: projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20181030
        disk_size: 12
        disks:
          - disk-01
          - disk-02
          - disk-03
          - disk-04
          - disk-05
          - disk-06
          - disk-07
        addresses:
          - addr-01
          - addr-02
          - addr-03
          - addr-04
          - addr-05
          - addr-06
          - addr-07
        instances:
          - { index: 1, tags: elasticsearch }
          - { index: 2, tags: [app, nginx] }
          - { index: 3, tags: [app, nginx] }
          - { index: 4, tags: database }
          - { index: 5, tags: database }
          - { index: 6, tags: haproxy }
          - { index: 7, tags: jmeter }

- hosts: all
  become: yes
  roles:
    - { role: users, payload: users.yml }

- hosts: elasticsearch
  become: yes
  roles:
     - docker
     - elasticsearch

- hosts: database
  become: yes
  roles:
    - { role: database,
        username: 'blog',
        password: "{{ lookup('passwordstore', 'sdb-ghost/db_user') }}",
        dbname: 'ghost_db'
      } 
    - { role: beats,
        elastic_host: "{{ hostvars[groups['elasticsearch'][0]]['ansible_%s' | format(ansible_interfaces[0])].ipv4.address }}",
        modules: ["mysql"],
        log_files: "/var/log/mysql/*.log"
      }

- hosts: app
  become: yes
  roles:
    - role: docker
    - role: app-ghost
    - { role: beats,
        elastic_host: "{{ hostvars[groups['elasticsearch'][0]]['ansible_%s' | format(ansible_interfaces[0])].ipv4.address }}",
        modules: ["system"]
      }

- hosts: nginx
  become: yes
  roles:
    - {
        role: web-nginx,
        template: ghost.conf
      }
    - { role: beats,
        elastic_host: "{{ hostvars[groups['elasticsearch'][0]]['ansible_%s' | format(ansible_interfaces[0])].ipv4.address }}",
        modules: ["nginx", "system"],
        log_files: "/var/log/nginx/*.log"
      }

- hosts: haproxy
  become: yes
  roles:
    - { role: haproxy,
        iface: '{{ ansible_default_ipv4.interface }}',
        httpd_port: 80,
        mode: http,
        balance: roundrobin,
        listenport: 8888,
        daemonname: myapphaproxy
      }
    - { role: beats,
        elastic_host: "{{ hostvars[groups['elasticsearch'][0]]['ansible_%s' | format(ansible_interfaces[0])].ipv4.address }}",
        modules: ["haproxy", "system"]
      }

- hosts: jmeter
  become: yes
  roles:
    - { role: jmeter,
        sampler_domain: "{{ hostvars[groups['haproxy'][0]]['ansible_%s' | format(ansible_interfaces[0])].ipv4.address }}"
      }